# The following four vars are placeholder/empty vars.  The values are populated from a separate creds.tfvars file, stored
# outside of your repo folder. Use the -var-file=../../creds/creds.tfvars flag when applying config to use the values from 
# your creds.tfvars file.  The creds.tfvars file must contain four variables defined like this (but not commented out):
#
# subscription_id = "blahBlahBlahblahBlahBlah"
# client_secret   = "blahBlahBlahblahBlahBlah"
# client_id       = "blahBlahBlahblahBlahBlah"
# tenant_id       = "blahBlahBlahblahBlahBlah"

variable "subscription_id" {}
variable "client_secret" {}
variable "client_id" {}
variable "tenant_id" {}

variable "f5xc_sms_node_count" {
  description = "Number of nodes (sites) to deploy"
  default     = 1
}

variable "owner" {
  description = "Owner name tag"
  default     = "<replace with owner name>"
}

variable "f5xc_tenant" {
  type    = string
  default = "<replace with tenant name>"
}

variable "f5xc_api_url" {
  type    = string
  default = "https://< replace with tenant base URL>/api"
}

variable "f5xc_api_p12_file" {
  type        = string
  description = "Volterra tenant api key"
  default     = "<replace with path to p12 certificate>"
}

variable "prefix" {
  description = "prefix used for naming objects created in azure"
  default     = "my-site-prefix"
}

locals {
  f5xc_sms_name = format("%s-site", var.prefix)
}

variable "f5xc_sms_description" {
  type    = string
  default = "Azure smsv2 site created with Terraform"
}

variable "location" {
  description = "Azure location name"
  default     = "uksouth"
}

variable "azs_short" {
  description = "Assumes three AZs within region.  Locals above will format the full AZ names based on Region"
  default     = ["1", "2", "3"]
}

locals {
  azs = [
    for each_az in var.azs_short : format("%s%s", var.location, each_az)
  ]
}

variable "f5xc_sms_labels" {
  # Used for virtual site membership
  type    = map(string)
  default = {
    known-key = "known-value"
  }
}

variable "f5xc_sms_instance_type" {
  description = "Specifies the size of the virtual machine."
  type        = string
  default     = "Standard_DS4_v2"
}

variable "f5xc_sms_storage_account_type" {
  description = "Defines the type of storage account to be created. Valid options are Standard_LRS, Standard_ZRS, Standard_GRS, Standard_RAGRS, Premium_LRS."
  default     = "Standard_LRS"
}

variable "f5xc_api_token" {
  type = string
}

variable "f5xc_token_base_uri" {
  type    = string
  default = "/register/namespaces/%s/tokens"
}

variable "f5xc_token_read_uri" {
  type    = string
  default = "/register/namespaces/%s/tokens/%s"
}

variable "f5xc_token_delete_uri" {
  type    = string
  default = "/register/namespaces/%s/tokens/%s"
}

variable "f5xc_sms_base_uri" {
  type    = string
  default = "/config/namespaces/%s/securemesh_site_v2s"
}

variable "f5xc_sms_read_uri" {
  type    = string
  default = "/config/namespaces/%s/securemesh_site_v2s/%s"
}

variable "f5xc_sms_delete_uri" {
  type    = string
  default = "/config/namespaces/%s/securemesh_site_v2s/%s"
}

variable "f5xc_sms_provider_name" {
  type = string
  validation {
    condition     = contains(["rseries", "aws", "gcp", "azure", "kvm", "vmware", "baremetal"], var.f5xc_sms_provider_name)
    error_message = format("Valid values for provider_name: rseries")
  }
  default = "azure"
}

variable "f5xc_sms_master_nodes_count" {
  type = number
  validation {
    condition     = var.f5xc_sms_master_nodes_count == 1 || var.f5xc_sms_master_nodes_count == 3
    error_message = "Master node counter must be 1 or 3"
  }
  default = 1
}

variable "f5xc_sms_perf_mode_l7_enhanced" {
  type    = bool
  default = true
}

variable "f5xc_sms_enable_offline_survivability_mode" {
  type    = bool
  default = false
}

variable "f5xc_sms_disable" {
  type    = bool
  default = false
}

variable "f5xc_sms_annotations" {
  type    = map(string)
  default = {}
}

variable "f5xc_namespace" {
  type    = string
  default = "system"
}

variable "f5xc_sms_default_sw_version" {
  type    = bool
  default = true
}

variable "f5xc_sms_default_os_version" {
  type    = bool
  default = true
}

variable "f5xc_sms_operating_system_version" {
  type    = string
  default = ""
}

variable "f5xc_sms_volterra_software_version" {
  type    = string
  default = ""
}

variable "f5xc_sms_block_all_services" {
  type    = bool
  default = false
}

variable "f5xc_sms_tunnel_type" {
  type    = string
  default = "SITE_TO_SITE_TUNNEL_IPSEC_OR_SSL"
}

variable "f5xc_sms_tunnel_dead_timeout" {
  type    = number
  default = 0
}

variable "f5xc_sms_no_forward_proxy" {
  type    = bool
  default = true
}

variable "f5xc_sms_no_network_policy" {
  type    = bool
  default = true
}

variable "f5xc_sms_logs_streaming_disabled" {
  type    = bool
  default = true
}

variable "f5xc_dc_cluster_group_slo_name" {
  type    = string
  default = null
}

variable "f5xc_dc_cluster_group_sli_name" {
  type    = string
  default = null
}

# variable "f5xc_tenant_full" {
#   type        = string
#   description = "Volterra tenant name"
#   default     = "<replace with tenant name (long)>"
# }

# variable "f5xc_namespace" {
#   type        = string
#   description = "Volterra app namespace where the object will be created. This cannot be system or shared ns."
#   default     = "<replace with user namespace>"
# }

# variable "aks_k8s_namespace" {
#   type        = string
#   description = "External k8s namespace where objects (LB / k8s svc) will be created by XC, if no namespace is included."
#   default     = "azure-smsv2-aks"
# }

# variable "eks_k8s_namespace" {
#   type        = string
#   description = "External k8s namespace where objects (LB / k8s svc) will be created by XC, if no namespace is included."
#   default     = "aws-eks"
# }

# variable "base" {
#   default = "aks"
# }